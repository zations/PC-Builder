# Generated by Django 5.1.1 on 2024-10-07 16:22

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('pcpicker', '0009_cpucooler_rename_name_gpu_name_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('case_type', models.CharField(max_length=20)),
                ('color', models.CharField(max_length=20)),
                ('power_supply', models.CharField(max_length=50)),
                ('side_panel', models.CharField(max_length=50)),
                ('external_volume', models.CharField(max_length=50)),
                ('internal_bays', models.IntegerField()),
                ('benchmark', models.IntegerField()),
                ('price', models.FloatField(blank=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('screen_size', models.CharField(max_length=10)),
                ('resolution', models.CharField(max_length=50)),
                ('refresh_rate', models.CharField(max_length=10)),
                ('response_time', models.CharField(max_length=10)),
                ('panel_type', models.CharField(max_length=50)),
                ('aspect_ratio', models.CharField(max_length=10)),
                ('benchmark', models.IntegerField()),
                ('price', models.FloatField(blank=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Motherboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('socket_cpu', models.CharField(max_length=50)),
                ('form_factor', models.CharField(max_length=50)),
                ('memory_max', models.CharField(max_length=10)),
                ('memory_slots', models.IntegerField()),
                ('color', models.CharField(max_length=50)),
                ('benchmark', models.IntegerField()),
                ('price', models.FloatField(blank=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OperatingSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('mode', models.CharField(max_length=50)),
                ('max_supported_memory', models.CharField(max_length=50)),
                ('benchmark', models.IntegerField()),
                ('price', models.CharField(blank=200, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PowerSupply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('psu_type', models.CharField(max_length=50)),
                ('efficiency_rating', models.CharField(max_length=20)),
                ('wattage', models.IntegerField()),
                ('modular', models.CharField(max_length=20)),
                ('color', models.CharField(max_length=20)),
                ('benchmark', models.IntegerField()),
                ('price', models.FloatField(blank=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('speed', models.CharField(max_length=10)),
                ('modules', models.CharField(max_length=20)),
                ('price_per_gb', models.DecimalField(decimal_places=2, max_digits=5)),
                ('color', models.CharField(max_length=20)),
                ('first_word_latency', models.CharField(max_length=10)),
                ('cas_latency', models.CharField(max_length=10)),
                ('benchmark', models.IntegerField()),
                ('price', models.FloatField(blank=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('capacity', models.CharField(max_length=10)),
                ('price_per_gb', models.DecimalField(decimal_places=2, max_digits=5)),
                ('storage_type', models.CharField(max_length=20)),
                ('cache', models.CharField(max_length=20)),
                ('form_factor', models.CharField(max_length=20)),
                ('interface', models.CharField(max_length=50)),
                ('benchmark', models.IntegerField()),
                ('price', models.FloatField(blank=200, null=True)),
            ],
        ),
        migrations.RenameField(
            model_name='cpucooler',
            old_name='type',
            new_name='cooler_type',
        ),
        migrations.RenameField(
            model_name='cpucooler',
            old_name='number_of_fans',
            new_name='fan_count',
        ),
        migrations.RenameField(
            model_name='cpucooler',
            old_name='tdp_support',
            new_name='tdp',
        ),
        migrations.AddField(
            model_name='cpucooler',
            name='benchmark',
            field=models.IntegerField(blank=94, null=True),
        ),
        migrations.AddField(
            model_name='cpucooler',
            name='price',
            field=models.FloatField(blank=200, null=True),
        ),
        migrations.AlterField(
            model_name='cpucooler',
            name='fan_size',
            field=models.CharField(max_length=10),
        ),
        migrations.AlterField(
            model_name='cpucooler',
            name='noise_level',
            field=models.DecimalField(decimal_places=1, max_digits=4),
        ),
    ]
